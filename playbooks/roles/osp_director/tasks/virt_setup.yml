---

- name: Create a new volume pool
  shell: | 
    virsh pool-define-as rhosp_virt --type dir --target /rhosp_virt
    virsh pool-autostart rhosp_virt
    virsh pool-start rhosp_virt
  args:
    creates: /etc/libvirt/storage/rhosp_virt.xml
  tags:
    - virt_general

- name: Fix wheel group for NOPASSWD
  lineinfile:
    path: /etc/sudoers
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  tags:
    - virt_general

- name: Create a dci user on the host.
  user:
    name: dci
    comment: DCI User
    create_home: true
    append: yes
    groups: wheel
    state: present
  tags:
    - virt_general

- name: Set up the bashrc to throw menu and still allow term for commands
  copy:
    src: dci_bashrc
    dest: /home/dci/.bashrc
    owner: dci
    group: dci
    mode: '0644'
  tags:
    - virt_general

- name: Make sure the /home/dci/.ssh dir exists
  file:
    state: directory
    mode: '0700'
    owner: dci
    group: dci
    path: /home/dci/.ssh
  tags:
    - virt_general

- name: Generate a dci ssh key to use for vm access
  openssh_keypair:
    owner: dci
    group: dci
    path: /home/dci/.ssh/id_rsa
    size: 2048
  tags:
    - virt_general

- name: Copy the dci pub ssh key to its own authorized_keys file if it doesn't exist
  copy:
    src: /home/dci/.ssh/id_rsa.pub
    dest: /home/dci/.ssh/authorized_keys
    owner: dci
    group: dci
    mode: '0600'
    remote_src: yes
    validate: stat %s
  tags:
    - virt_general

- name: Load dci ssh public key into variable.
  slurp:
    src: "/home/dci/.ssh/id_rsa.pub"
  register: dcisshpubkey
  tags:
    - always

- name: Install curses-menu via pip3
  pip:
    executable: /usr/bin/pip3
    name: curses-menu
    state: present
  tags:
    - virt_general

- name: Set dcisshpubkey fact with dci's public key
  set_fact:
    dcisshpubkey: "{{ dcisshpubkey.content | b64decode }}"
  tags:
    - always

- name: Copy over the dci shell menu
  template:
    src: dcimenu.py.j2
    dest: /usr/local/bin/dcimenu.py
    owner: root
    group: root
    mode: '0755'
  tags:
    - virt_general

- name: Generate a root ssh key to use for vm access
  openssh_keypair:
    path: /root/.ssh/id_rsa
    size: 2048
  tags:
    - virt_general

- name: Load root ssh public key into variable.
  slurp:
    src: "/root/.ssh/id_rsa.pub"
  register: rootsshpubkey
  tags:
    - always

- name: Set rootsshpubkey fact with root's public key
  set_fact:
    rootsshpubkey: "{{ rootsshpubkey.content | b64decode }}"
  tags:
    - always

- include: dci_vm.yml

- include: director_vm.yml
